worker_processes 1;

events {
    worker_connections 1024;
}

http {
    resolver 127.0.0.11 valid=10s;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # upstream core-upstream {
    #     server core-service:80;
    # }

    # upstream math-upstream {
    #     server math-service:80;
    # }

    map $http_x_rpc_method $target_service {
    hostnames; 
    ~^math\.   math-service;

    default     core-service;
    }


    server {
        listen 80;

        location / {
            root /usr/share/nginx/html/frontend;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location /rpc {
            client_max_body_size 64k; 
            client_body_timeout 1s;


            if ($request_method != POST) {
                return 405;
            }

            if ($http_x_client_id != "sirius-frontend") {
                return 401; 
            }

            if ($http_x_client_secret = "") {
                return 401; 
            }

            if ($http_x_rpc_method = "") {
                return 400; 
            }
                
            if ($http_content_type != "application/json") {
                return 400;
            }
    
            proxy_pass http://$target_service:80;
            proxy_set_header Host $host;
            proxy_set_header X-Client-ID $http_x_client_id;
            proxy_set_header X-Client-Secret $http_x_client_secret;
            proxy_set_header X-Rpc-Method $http_x_rpc_method;
        }
    }
}
