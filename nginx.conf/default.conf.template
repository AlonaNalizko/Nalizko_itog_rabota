worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    resolver 127.0.0.11 valid=10s;

    upstream core-upstream {
        server core-service:80;
    }

    upstream math-upstream {
        server math-service:80;
    }

    # Определение целевого сервиса по X-Rpc-Method
    map $http_x_rpc_method $target_service {
        hostnames;

        "math.sum"  math-upstream;
        "math.sub"  math-upstream;
        "math.mult" math-upstream;
        "math.div"  math-upstream;
        default     core-upstream;
    }

    # Проверка Client ID
    map $http_x_client_id $invalid_client_id {
        hostnames;

        "sirius-frontend" 0;
        default           1;
    }

    # Проверка Client Secret (не пустой)
    map $http_x_client_secret $invalid_client_secret {
        hostnames;

        ""      1;
        " "     1;
        default 0;
    }

    # Проверка наличия X-Rpc-Method
    map $http_x_rpc_method $invalid_rpc_method {
        hostnames;

        ""      1;
        default 0;
    }

    # Проверка content-type
    map $http_content_type $invalid_content_type {
        hostnames;

        "application/json" 0;
        default            1;
    }

    server {
        listen 80;

        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        location /rpc {
            client_max_body_size 64;
            client_body_timeout 1s;

            if ($request_method != POST) {
                return 405 "Method Not Allowed";
            }

            if ($invalid_client_id = 1) {
                return 401 "Unauthorized - Invalid X-Client-ID";
            }

            if ($invalid_client_secret = 1) {
                return 401 "Unauthorized - Missing X-Client-Secret";
            }

            if ($invalid_rpc_method = 1) {
                return 400 "Bad Request - Missing X-Rpc-Method";
            }

            if ($invalid_content_type = 1) {
                return 400 "Bad Request - Content-Type must be application/json";
            }

            proxy_pass http://$target_service/;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Rpc-Method $http_x_rpc_method;

            proxy_connect_timeout 1s;
            proxy_send_timeout 1s;
            proxy_read_timeout 1s;
        }
    }
}
